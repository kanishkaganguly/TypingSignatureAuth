
import java.awt.event.KeyEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author nightstalker
 */
public class main extends javax.swing.JFrame {

    boolean started = false;
    long start_time = 0;
    long end_time = 0;
    long spaceStart_time = 0;
    long spaceEnd_time = 0;
    int counter = 0;
    long total_time_store[] = new long[10];
    long space_time_store[];
    int spaces = 0;
    int space_counter = 0;

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        border = new javax.swing.JSeparator();
        test_text = new javax.swing.JLabel();
        type_here = new javax.swing.JTextField();
        total_time = new javax.swing.JLabel();
        start_btn = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();
        space_time = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Typing Signature Based Authentication");

        test_text.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        test_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        test_text.setText("The moon is made of cheese");
        test_text.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        type_here.setEnabled(false);
        type_here.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                type_hereKeyReleased(evt);
            }
        });

        total_time.setText("Total Time Taken: ");

        start_btn.setText("Begin Training");
        start_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                start_btnMouseClicked(evt);
            }
        });

        progress.setString("Trained: 0/10");
        progress.setStringPainted(true);

        space_time.setText("Time Between Words:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(border)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(test_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(type_here)
                    .addComponent(total_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(start_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(space_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(border, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(test_text)
                .addGap(18, 18, 18)
                .addComponent(type_here, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(total_time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(space_time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(start_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void start_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_btnMouseClicked
        type_here.grabFocus();
        progress.setValue(0);
        progress.setMaximum(10);
        progress.setMinimum(0);
        progress.setString("Trained: 0/10");
        type_here.setEnabled(true);
        start_btn.setEnabled(false);
        spaces = count_space(test_text.getText());
        space_time_store = new long[spaces];
    }//GEN-LAST:event_start_btnMouseClicked

    private void type_hereKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_type_hereKeyReleased
        type_here.grabFocus();

        if (started == false && type_here.getText() == null) {
            started = true;
            start_time = System.nanoTime();
            spaceStart_time = System.nanoTime();
        }

        String current_text = type_here.getText();

        if (evt.getKeyChar() == KeyEvent.VK_SPACE) {
            spaceEnd_time = System.nanoTime();
            space_time(spaceStart_time, spaceEnd_time);
            spaceStart_time = 0;
            spaceEnd_time = 0;
            space_counter++;
        }

        if (current_text.equals(test_text.getText())) {
            total_time(start_time, end_time);
            type_here.setText("");
            end_time = System.nanoTime();
            started = false;
            counter += 1;
            update_progress(counter);
            spaceStart_time = 0;
            spaceEnd_time = 0;
        }

        if (counter == 10) {
            update_progress(counter);
            type_here.setEnabled(false);
            start_btn.setEnabled(true);
        }
    }//GEN-LAST:event_type_hereKeyReleased

    public void space_time(long start, long end) {
        space_time.setText("Time Between Words: " + ((end - start) / 1000000000) + " s");
        space_time_store[space_counter] = ((end - start) / 1000000000);
        print_time();
    }

    public void total_time(long start, long end) {
        total_time.setText("Total Time Taken: " + ((end - start) / 1000000000) + " s");
        total_time_store[counter] = ((end - start) / 1000000000);
        print_time();
    }

    public void update_progress(int n) {
        progress.setValue(n);
        progress.setString("Trained: " + n + "/10");
    }

    public int count_space(String str) {
        int count = 0;
        for (int i = 0; i < str.length(); i++) {
            if (Character.isWhitespace(str.charAt(i))) {
                count++;
            }
        }
        return count;
    }

    public void print_time() {
        for (int x = 0; x < total_time_store.length; x++) {
            System.out.print(total_time_store[x] + " ");
        }
        System.out.println();
        for (int x = 0; x < space_time_store.length; x++) {
            System.out.print(space_time_store[x] + " ");
        }
        System.out.println("\n");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator border;
    private javax.swing.JProgressBar progress;
    private javax.swing.JLabel space_time;
    private javax.swing.JButton start_btn;
    private javax.swing.JLabel test_text;
    private javax.swing.JLabel title;
    private javax.swing.JLabel total_time;
    private javax.swing.JTextField type_here;
    // End of variables declaration//GEN-END:variables
}
